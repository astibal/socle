#include <gtest/gtest.h>

#include <mempool/mempool.hpp>
#include <common/stringops.hpp>

TEST(Text,HexDump) {


    const uint8_t data[] = {
            0x00, 0x00, 0x61, 0x01, 0x04, 0x00, 0x00, 0x00, 0xab, 0x88, 0x61, 0x96, 0xc3, 0x61, 0xbe, 0x94,
            0x0b, 0xca, 0x61, 0x2c, 0x6a, 0x08, 0x02, 0x12, 0x81, 0x05, 0xc6, 0xda, 0xb8, 0x07, 0x14, 0xc5,
            0xa3, 0x7f, 0x5f, 0x90, 0x1d, 0x75, 0xd0, 0x62, 0x0d, 0x26, 0x3d, 0x4c, 0x1c, 0x89, 0x2a, 0x56,
            0x42, 0x6c, 0x28, 0xe9, 0x5c, 0x03, 0x31, 0x34, 0x34, 0x00, 0x87, 0xb0, 0xbd, 0xad, 0x2a, 0x12,
            0xb1, 0xa4, 0x8f, 0x23, 0xce, 0xd5, 0x47, 0x4e, 0x85, 0x9e, 0x39, 0xaa, 0xac, 0x6e, 0xf7, 0x8c,
            0x34, 0x4d, 0x00, 0x8b, 0x40, 0xea, 0x2a, 0xc9, 0x35, 0x25, 0x5a, 0x93, 0x51, 0x41, 0x91, 0x8a,
            0x0b, 0x8d, 0x36, 0x17, 0x82, 0xe3, 0x4e, 0x08, 0x4f, 0xff, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00,
            0x00, 0x00, 0xab, 0x12, 0x80, 0x01, 0x20, 0x00, 0x2a, 0x10, 0x08, 0x88, 0x81, 0x02, 0x12, 0x0a,
            0xba, 0xea, 0xc4, 0xce, 0xe0, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x10, 0x08, 0xcd, 0xbe, 0x02,
            0x12, 0x0a, 0x8e, 0x9a, 0x88, 0xc1, 0xe1, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x10, 0x08, 0xf7,
            0xf7, 0x02, 0x12, 0x0a, 0xc4, 0xf8, 0x83, 0x9a, 0xd7, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x10,
            0x08, 0xc7, 0x87, 0x03, 0x12, 0x0a, 0xbe, 0xc6, 0xd3, 0xc5, 0xe1, 0x5f, 0x00, 0x00, 0x00, 0x00,
            0x2a, 0x10, 0x08, 0x9f, 0xef, 0x05, 0x12, 0x0a, 0x98, 0xe1, 0x94, 0x87, 0xdd, 0x5f, 0x00, 0x00,
            0x00, 0x00, 0x2a, 0x10, 0x08, 0x9a, 0xb7, 0x09, 0x12, 0x0a, 0xee, 0x81, 0xac, 0xbc, 0xe1, 0x5f,
            0x00, 0x00, 0x00, 0x00, 0x2a, 0x10, 0x08, 0x81, 0xf5, 0x02, 0x12, 0x0a, 0xea, 0xab, 0xb9, 0xc6,
            0xa4, 0x5e, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x32, 0x01, 0x31, 0x3a, 0x06, 0x08, 0x1e, 0x18,
            0x5a, 0x20, 0x00,
            0x00, 0x00, 0x61, 0x01, 0x04, 0x00, 0x00, 0x00, 0xab, 0x88, 0x61, 0x96, 0xc3, 0x61, 0xbe, 0x94,
            0x0b, 0xca, 0x61, 0x2c, 0x6a, 0x08, 0x02, 0x12, 0x81, 0x05, 0xc6, 0xda, 0xb8, 0x07, 0x14, 0xc5,
            0xa3, 0x7f, 0x5f, 0x90, 0x1d, 0x75, 0xd0, 0x62, 0x0d, 0x26, 0x3d, 0x4c, 0x1c, 0x89, 0x2a, 0x56,
            0x42, 0x6c, 0x28, 0xe9, 0x5c, 0x03, 0x31, 0x34, 0x34, 0x00, 0x87, 0xb0, 0xbd, 0xad, 0x2a, 0x12,
            0xb1, 0xa4, 0x8f, 0x23, 0xce, 0xd5, 0x47, 0x4e, 0x85, 0x9e, 0x39, 0xaa, 0xac, 0x6e, 0xf7, 0x8c,
            0x34, 0x4d, 0x00, 0x8b, 0x40, 0xea, 0x2a, 0xc9, 0x35, 0x25, 0x5a, 0x93, 0x51, 0x41, 0x91, 0x8a,
            0x0b, 0x8d, 0x36, 0x17, 0x82, 0xe3, 0x4e, 0x08, 0x4f, 0xff, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00,
            0x00, 0x00, 0xab, 0x12, 0x80, 0x01, 0x20, 0x00, 0x2a, 0x10, 0x08, 0x88, 0x81, 0x02, 0x12, 0x0a,
            0xba, 0xea, 0xc4, 0xce, 0xe0, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x10, 0x08, 0xcd, 0xbe, 0x02,
            0x12, 0x0a, 0x8e, 0x9a, 0x88, 0xc1, 0xe1, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x10, 0x08, 0xf7,
            0xf7, 0x02, 0x12, 0x0a, 0xc4, 0xf8, 0x83, 0x9a, 0xd7, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x10,
            0x08, 0xc7, 0x87, 0x03, 0x12, 0x0a, 0xbe, 0xc6, 0xd3, 0xc5, 0xe1, 0x5f, 0x00, 0x00, 0x00, 0x00,
            0x2a, 0x10, 0x08, 0x9f, 0xef, 0x05, 0x12, 0x0a, 0x98, 0xe1, 0x94, 0x87, 0xdd, 0x5f, 0x00, 0x00,
            0x00, 0x00, 0x2a, 0x10, 0x08, 0x9a, 0xb7, 0x09, 0x12, 0x0a, 0xee, 0x81, 0xac, 0xbc, 0xe1, 0x5f,
            0x00, 0x00, 0x00, 0x00, 0x2a, 0x10, 0x08, 0x81, 0xf5, 0x02, 0x12, 0x0a, 0xea, 0xab, 0xb9, 0xc6,
            0xa4, 0x5e, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x32, 0x01, 0x31, 0x3a, 0x06, 0x08, 0x1e, 0x18,
            0x5a, 0x20, 0x00,
            0x00, 0x00, 0x61, 0x01, 0x04, 0x00, 0x00, 0x00, 0xab, 0x88, 0x61, 0x96, 0xc3, 0x61, 0xbe, 0x94,
            0x0b, 0xca, 0x61, 0x2c, 0x6a, 0x08, 0x02, 0x12, 0x81, 0x05, 0xc6, 0xda, 0xb8, 0x07, 0x14, 0xc5,
            0xa3, 0x7f, 0x5f, 0x90, 0x1d, 0x75, 0xd0, 0x62, 0x0d, 0x26, 0x3d, 0x4c, 0x1c, 0x89, 0x2a, 0x56,
            0x42, 0x6c, 0x28, 0xe9, 0x5c, 0x03, 0x31, 0x34, 0x34, 0x00, 0x87, 0xb0, 0xbd, 0xad, 0x2a, 0x12,
            0xb1, 0xa4, 0x8f, 0x23, 0xce, 0xd5, 0x47, 0x4e, 0x85, 0x9e, 0x39, 0xaa, 0xac, 0x6e, 0xf7, 0x8c,
            0x34, 0x4d, 0x00, 0x8b, 0x40, 0xea, 0x2a, 0xc9, 0x35, 0x25, 0x5a, 0x93, 0x51, 0x41, 0x91, 0x8a,
            0x0b, 0x8d, 0x36, 0x17, 0x82, 0xe3, 0x4e, 0x08, 0x4f, 0xff, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00,
            0x00, 0x00, 0xab, 0x12, 0x80, 0x01, 0x20, 0x00, 0x2a, 0x10, 0x08, 0x88, 0x81, 0x02, 0x12, 0x0a,
            0xba, 0xea, 0xc4, 0xce, 0xe0, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x10, 0x08, 0xcd, 0xbe, 0x02,
            0x12, 0x0a, 0x8e, 0x9a, 0x88, 0xc1, 0xe1, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x10, 0x08, 0xf7,
            0xf7, 0x02, 0x12, 0x0a, 0xc4, 0xf8, 0x83, 0x9a, 0xd7, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x10,
            0x08, 0xc7, 0x87, 0x03, 0x12, 0x0a, 0xbe, 0xc6, 0xd3, 0xc5, 0xe1, 0x5f, 0x00, 0x00, 0x00, 0x00,
            0x2a, 0x10, 0x08, 0x9f, 0xef, 0x05, 0x12, 0x0a, 0x98, 0xe1, 0x94, 0x87, 0xdd, 0x5f, 0x00, 0x00,
            0x00, 0x00, 0x2a, 0x10, 0x08, 0x9a, 0xb7, 0x09, 0x12, 0x0a, 0xee, 0x81, 0xac, 0xbc, 0xe1, 0x5f,
            0x00, 0x00, 0x00, 0x00, 0x2a, 0x10, 0x08, 0x81, 0xf5, 0x02, 0x12, 0x0a, 0xea, 0xab, 0xb9, 0xc6,
            0xa4, 0x5e, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x32, 0x01, 0x31, 0x3a, 0x06, 0x08, 0x1e, 0x18,
            0x5a, 0x20, 0x00,
            0x00, 0x00, 0x61, 0x01, 0x04, 0x00, 0x00, 0x00, 0xab, 0x88, 0x61, 0x96, 0xc3, 0x61, 0xbe, 0x94,
            0x0b, 0xca, 0x61, 0x2c, 0x6a, 0x08, 0x02, 0x12, 0x81, 0x05, 0xc6, 0xda, 0xb8, 0x07, 0x14, 0xc5,
            0xa3, 0x7f, 0x5f, 0x90, 0x1d, 0x75, 0xd0, 0x62, 0x0d, 0x26, 0x3d, 0x4c, 0x1c, 0x89, 0x2a, 0x56,
            0x42, 0x6c, 0x28, 0xe9, 0x5c, 0x03, 0x31, 0x34, 0x34, 0x00, 0x87, 0xb0, 0xbd, 0xad, 0x2a, 0x12,
            0xb1, 0xa4, 0x8f, 0x23, 0xce, 0xd5, 0x47, 0x4e, 0x85, 0x9e, 0x39, 0xaa, 0xac, 0x6e, 0xf7, 0x8c,
            0x34, 0x4d, 0x00, 0x8b, 0x40, 0xea, 0x2a, 0xc9, 0x35, 0x25, 0x5a, 0x93, 0x51, 0x41, 0x91, 0x8a,
            0x0b, 0x8d, 0x36, 0x17, 0x82, 0xe3, 0x4e, 0x08, 0x4f, 0xff, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00,
            0x00, 0x00, 0xab, 0x12, 0x80, 0x01, 0x20, 0x00, 0x2a, 0x10, 0x08, 0x88, 0x81, 0x02, 0x12, 0x0a,
            0xba, 0xea, 0xc4, 0xce, 0xe0, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x10, 0x08, 0xcd, 0xbe, 0x02,
            0x12, 0x0a, 0x8e, 0x9a, 0x88, 0xc1, 0xe1, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x10, 0x08, 0xf7,
            0xf7, 0x02, 0x12, 0x0a, 0xc4, 0xf8, 0x83, 0x9a, 0xd7, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x10,
            0x08, 0xc7, 0x87, 0x03, 0x12, 0x0a, 0xbe, 0xc6, 0xd3, 0xc5, 0xe1, 0x5f, 0x00, 0x00, 0x00, 0x00,
            0x2a, 0x10, 0x08, 0x9f, 0xef, 0x05, 0x12, 0x0a, 0x98, 0xe1, 0x94, 0x87, 0xdd, 0x5f, 0x00, 0x00,
            0x00, 0x00, 0x2a, 0x10, 0x08, 0x9a, 0xb7, 0x09, 0x12, 0x0a, 0xee, 0x81, 0xac, 0xbc, 0xe1, 0x5f,
            0x00, 0x00, 0x00, 0x00, 0x2a, 0x10, 0x08, 0x81, 0xf5, 0x02, 0x12, 0x0a, 0xea, 0xab, 0xb9, 0xc6,
            0xa4, 0x5e, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x32, 0x01, 0x31, 0x3a, 0x06, 0x08, 0x1e, 0x18,
            0x5a, 0x20, 0x00,
            0x00, 0x00, 0x61, 0x01, 0x04, 0x00, 0x00, 0x00, 0xab, 0x88, 0x61, 0x96, 0xc3, 0x61, 0xbe, 0x94,
            0x0b, 0xca, 0x61, 0x2c, 0x6a, 0x08, 0x02, 0x12, 0x81, 0x05, 0xc6, 0xda, 0xb8, 0x07, 0x14, 0xc5,
            0xa3, 0x7f, 0x5f, 0x90, 0x1d, 0x75, 0xd0, 0x62, 0x0d, 0x26, 0x3d, 0x4c, 0x1c, 0x89, 0x2a, 0x56,
            0x42, 0x6c, 0x28, 0xe9, 0x5c, 0x03, 0x31, 0x34, 0x34, 0x00, 0x87, 0xb0, 0xbd, 0xad, 0x2a, 0x12,
            0xb1, 0xa4, 0x8f, 0x23, 0xce, 0xd5, 0x47, 0x4e, 0x85, 0x9e, 0x39, 0xaa, 0xac, 0x6e, 0xf7, 0x8c,
            0x34, 0x4d, 0x00, 0x8b, 0x40, 0xea, 0x2a, 0xc9, 0x35, 0x25, 0x5a, 0x93, 0x51, 0x41, 0x91, 0x8a,
            0x0b, 0x8d, 0x36, 0x17, 0x82, 0xe3, 0x4e, 0x08, 0x4f, 0xff, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00,
            0x00, 0x00, 0xab, 0x12, 0x80, 0x01, 0x20, 0x00, 0x2a, 0x10, 0x08, 0x88, 0x81, 0x02, 0x12, 0x0a,
            0xba, 0xea, 0xc4, 0xce, 0xe0, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x10, 0x08, 0xcd, 0xbe, 0x02,
            0x12, 0x0a, 0x8e, 0x9a, 0x88, 0xc1, 0xe1, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x10, 0x08, 0xf7,
            0xf7, 0x02, 0x12, 0x0a, 0xc4, 0xf8, 0x83, 0x9a, 0xd7, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x10,
            0x08, 0xc7, 0x87, 0x03, 0x12, 0x0a, 0xbe, 0xc6, 0xd3, 0xc5, 0xe1, 0x5f, 0x00, 0x00, 0x00, 0x00,
            0x2a, 0x10, 0x08, 0x9f, 0xef, 0x05, 0x12, 0x0a, 0x98, 0xe1, 0x94, 0x87, 0xdd, 0x5f, 0x00, 0x00,
            0x00, 0x00, 0x2a, 0x10, 0x08, 0x9a, 0xb7, 0x09, 0x12, 0x0a, 0xee, 0x81, 0xac, 0xbc, 0xe1, 0x5f,
            0x00, 0x00, 0x00, 0x00, 0x2a, 0x10, 0x08, 0x81, 0xf5, 0x02, 0x12, 0x0a, 0xea, 0xab, 0xb9, 0xc6,
            0xa4, 0x5e, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x32, 0x01, 0x31, 0x3a, 0x06, 0x08, 0x1e, 0x18,
            0x5a, 0x20, 0x00,
            0x00, 0x00, 0x61, 0x01, 0x04, 0x00, 0x00, 0x00, 0xab, 0x88, 0x61, 0x96, 0xc3, 0x61, 0xbe, 0x94,
            0x0b, 0xca, 0x61, 0x2c, 0x6a, 0x08, 0x02, 0x12, 0x81, 0x05, 0xc6, 0xda, 0xb8, 0x07, 0x14, 0xc5,
            0xa3, 0x7f, 0x5f, 0x90, 0x1d, 0x75, 0xd0, 0x62, 0x0d, 0x26, 0x3d, 0x4c, 0x1c, 0x89, 0x2a, 0x56,
            0x42, 0x6c, 0x28, 0xe9, 0x5c, 0x03, 0x31, 0x34, 0x34, 0x00, 0x87, 0xb0, 0xbd, 0xad, 0x2a, 0x12,
            0xb1, 0xa4, 0x8f, 0x23, 0xce, 0xd5, 0x47, 0x4e, 0x85, 0x9e, 0x39, 0xaa, 0xac, 0x6e, 0xf7, 0x8c,
            0x34, 0x4d, 0x00, 0x8b, 0x40, 0xea, 0x2a, 0xc9, 0x35, 0x25, 0x5a, 0x93, 0x51, 0x41, 0x91, 0x8a,
            0x0b, 0x8d, 0x36, 0x17, 0x82, 0xe3, 0x4e, 0x08, 0x4f, 0xff, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00,
            0x00, 0x00, 0xab, 0x12, 0x80, 0x01, 0x20, 0x00, 0x2a, 0x10, 0x08, 0x88, 0x81, 0x02, 0x12, 0x0a,
            0xba, 0xea, 0xc4, 0xce, 0xe0, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x10, 0x08, 0xcd, 0xbe, 0x02,
            0x12, 0x0a, 0x8e, 0x9a, 0x88, 0xc1, 0xe1, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x10, 0x08, 0xf7,
            0xf7, 0x02, 0x12, 0x0a, 0xc4, 0xf8, 0x83, 0x9a, 0xd7, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x10,
            0x08, 0xc7, 0x87, 0x03, 0x12, 0x0a, 0xbe, 0xc6, 0xd3, 0xc5, 0xe1, 0x5f, 0x00, 0x00, 0x00, 0x00,
            0x2a, 0x10, 0x08, 0x9f, 0xef, 0x05, 0x12, 0x0a, 0x98, 0xe1, 0x94, 0x87, 0xdd, 0x5f, 0x00, 0x00,
            0x00, 0x00, 0x2a, 0x10, 0x08, 0x9a, 0xb7, 0x09, 0x12, 0x0a, 0xee, 0x81, 0xac, 0xbc, 0xe1, 0x5f,
            0x00, 0x00, 0x00, 0x00, 0x2a, 0x10, 0x08, 0x81, 0xf5, 0x02, 0x12, 0x0a, 0xea, 0xab, 0xb9, 0xc6,
            0xa4, 0x5e, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x32, 0x01, 0x31, 0x3a, 0x06, 0x08, 0x1e, 0x18,
            0x5a, 0x20, 0x00,
            0x00, 0x00, 0x61, 0x01, 0x04, 0x00, 0x00, 0x00, 0xab, 0x88, 0x61, 0x96, 0xc3, 0x61, 0xbe, 0x94,
            0x0b, 0xca, 0x61, 0x2c, 0x6a, 0x08, 0x02, 0x12, 0x81, 0x05, 0xc6, 0xda, 0xb8, 0x07, 0x14, 0xc5,
            0xa3, 0x7f, 0x5f, 0x90, 0x1d, 0x75, 0xd0, 0x62, 0x0d, 0x26, 0x3d, 0x4c, 0x1c, 0x89, 0x2a, 0x56,
            0x42, 0x6c, 0x28, 0xe9, 0x5c, 0x03, 0x31, 0x34, 0x34, 0x00, 0x87, 0xb0, 0xbd, 0xad, 0x2a, 0x12,
            0xb1, 0xa4, 0x8f, 0x23, 0xce, 0xd5, 0x47, 0x4e, 0x85, 0x9e, 0x39, 0xaa, 0xac, 0x6e, 0xf7, 0x8c,
            0x34, 0x4d, 0x00, 0x8b, 0x40, 0xea, 0x2a, 0xc9, 0x35, 0x25, 0x5a, 0x93, 0x51, 0x41, 0x91, 0x8a,
            0x0b, 0x8d, 0x36, 0x17, 0x82, 0xe3, 0x4e, 0x08, 0x4f, 0xff, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00,
            0x00, 0x00, 0xab, 0x12, 0x80, 0x01, 0x20, 0x00, 0x2a, 0x10, 0x08, 0x88, 0x81, 0x02, 0x12, 0x0a,
            0xba, 0xea, 0xc4, 0xce, 0xe0, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x10, 0x08, 0xcd, 0xbe, 0x02,
            0x12, 0x0a, 0x8e, 0x9a, 0x88, 0xc1, 0xe1, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x10, 0x08, 0xf7,
            0xf7, 0x02, 0x12, 0x0a, 0xc4, 0xf8, 0x83, 0x9a, 0xd7, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x10,
            0x08, 0xc7, 0x87, 0x03, 0x12, 0x0a, 0xbe, 0xc6, 0xd3, 0xc5, 0xe1, 0x5f, 0x00, 0x00, 0x00, 0x00,
            0x2a, 0x10, 0x08, 0x9f, 0xef, 0x05, 0x12, 0x0a, 0x98, 0xe1, 0x94, 0x87, 0xdd, 0x5f, 0x00, 0x00,
            0x00, 0x00, 0x2a, 0x10, 0x08, 0x9a, 0xb7, 0x09, 0x12, 0x0a, 0xee, 0x81, 0xac, 0xbc, 0xe1, 0x5f,
            0x00, 0x00, 0x00, 0x00, 0x2a, 0x10, 0x08, 0x81, 0xf5, 0x02, 0x12, 0x0a, 0xea, 0xab, 0xb9, 0xc6,
            0xa4, 0x5e, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x32, 0x01, 0x31, 0x3a, 0x06, 0x08, 0x1e, 0x18,
            0x5a, 0x20, 0x00,
            0x00, 0x00, 0x61, 0x01, 0x04, 0x00, 0x00, 0x00, 0xab, 0x88, 0x61, 0x96, 0xc3, 0x61, 0xbe, 0x94,
            0x0b, 0xca, 0x61, 0x2c, 0x6a, 0x08, 0x02, 0x12, 0x81, 0x05, 0xc6, 0xda, 0xb8, 0x07, 0x14, 0xc5,
            0xa3, 0x7f, 0x5f, 0x90, 0x1d, 0x75, 0xd0, 0x62, 0x0d, 0x26, 0x3d, 0x4c, 0x1c, 0x89, 0x2a, 0x56,
            0x42, 0x6c, 0x28, 0xe9, 0x5c, 0x03, 0x31, 0x34, 0x34, 0x00, 0x87, 0xb0, 0xbd, 0xad, 0x2a, 0x12,
            0xb1, 0xa4, 0x8f, 0x23, 0xce, 0xd5, 0x47, 0x4e, 0x85, 0x9e, 0x39, 0xaa, 0xac, 0x6e, 0xf7, 0x8c,
            0x34, 0x4d, 0x00, 0x8b, 0x40, 0xea, 0x2a, 0xc9, 0x35, 0x25, 0x5a, 0x93, 0x51, 0x41, 0x91, 0x8a,
            0x0b, 0x8d, 0x36, 0x17, 0x82, 0xe3, 0x4e, 0x08, 0x4f, 0xff, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00,
            0x00, 0x00, 0xab, 0x12, 0x80, 0x01, 0x20, 0x00, 0x2a, 0x10, 0x08, 0x88, 0x81, 0x02, 0x12, 0x0a,
            0xba, 0xea, 0xc4, 0xce, 0xe0, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x10, 0x08, 0xcd, 0xbe, 0x02,
            0x12, 0x0a, 0x8e, 0x9a, 0x88, 0xc1, 0xe1, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x10, 0x08, 0xf7,
            0xf7, 0x02, 0x12, 0x0a, 0xc4, 0xf8, 0x83, 0x9a, 0xd7, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x10,
            0x08, 0xc7, 0x87, 0x03, 0x12, 0x0a, 0xbe, 0xc6, 0xd3, 0xc5, 0xe1, 0x5f, 0x00, 0x00, 0x00, 0x00,
            0x2a, 0x10, 0x08, 0x9f, 0xef, 0x05, 0x12, 0x0a, 0x98, 0xe1, 0x94, 0x87, 0xdd, 0x5f, 0x00, 0x00,
            0x00, 0x00, 0x2a, 0x10, 0x08, 0x9a, 0xb7, 0x09, 0x12, 0x0a, 0xee, 0x81, 0xac, 0xbc, 0xe1, 0x5f,
            0x00, 0x00, 0x00, 0x00, 0x2a, 0x10, 0x08, 0x81, 0xf5, 0x02, 0x12, 0x0a, 0xea, 0xab, 0xb9, 0xc6,
            0xa4, 0x5e, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x32, 0x01, 0x31, 0x3a, 0x06, 0x08, 0x1e, 0x18,

            0xa4, 0x5e, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x32, 0x01, 0x31, 0x3a, 0x06, 0x08, 0x1e, 0x18,
            0xa4, 0x5e, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x32, 0x01, 0x31, 0x3a, 0x06, 0x08, 0x1e, 0x18,

            0xa4, 0x5e, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x32, 0x01, 0x31, 0x3a, 0x06, 0x08, 0x1e, 0x18,
            0xa4, 0x5e, 0x00, 0x00, 0x00,
            0x00, 0x20, 0x00,

    };
    memPool::pool();
    ASSERT_TRUE(memPool::pool().is_ready());

//    std::cout << string_format("%s", hex_dump(data, sizeof(data)).c_str());
    std::cout << hex_dump(data, sizeof(data)).c_str();
}

TEST(Text, TAGS_ADD) {
    std::string tstr1 = "+abc+def+ghi";
    std::vector<std::string> res1 = {"abc", "def", "ghi" };
    auto t1 = string_tags(tstr1);

    ASSERT_TRUE(t1 == res1);
}

TEST(Text, TAGS_REMOVE) {
    std::string tstr1 = "+abc+def+ghi-abc";
    std::vector<std::string> res1 = { "def", "ghi", };
    auto t1 = string_tags(tstr1);

    ASSERT_TRUE(t1 == res1);
}

TEST(Text, TAGS_UPDATE_ADD) {
   std::vector<std::string> start = { "def", "ghi", };

   // note: result will be alphabetically sorted
   std::vector<std::string> result = { "abc", "def", "ghi" };

    string_tags_update(start, "+abc");

    ASSERT_TRUE(start == result);
}

TEST(Text, TAGS_UPDATE_SUB) {
    std::vector<std::string> start = { "def", "ghi", };

    // note: result will be alphabetically sorted
    std::vector<std::string> result = { "def" };

    string_tags_update(start, "-ghi");

    ASSERT_TRUE(start == result);
}


TEST(Text, TAGS_UPDATE_ASSIGN) {
    std::vector<std::string> start = { "def", "ghi", };

    // note: result will be alphabetically sorted
    std::vector<std::string> result = { "xyz" };

    string_tags_update(start, "=xyz");

    ASSERT_TRUE(start == result);
}

TEST(Text, TAGS_UPDATE_ASSIGN_1) {
    std::vector<std::string> start = { "def", "ghi", };

    // note: result will be alphabetically sorted
    std::vector<std::string> result = { "xyz" };

    string_tags_update(start, "+abc=xyz");

    ASSERT_TRUE(start == result);
}

TEST(Text, TAGS_UPDATE_ASSIGN_2) {
    std::vector<std::string> start = { "def", "ghi", };

    // note: result will be alphabetically sorted
    std::vector<std::string> result = { "abc", "def" };

    string_tags_update(start, "=+abc+def");

    ASSERT_TRUE(start == result);
}